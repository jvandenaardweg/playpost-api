enum Language {
  EN
}

enum Synthesizer {
  GOOGLE,
  AWS
}

enum Encoding {
  MP3,
  OGG,
  PCM # Wav
}

type User {
  id: ID! @unique
  email: String! @unique
  password: String!
  playlist: [Playlist!]! @relation(name: "UserToPlaylist", onDelete: CASCADE) # When a user is deleted, delete it's playlist
  archive: [Archive!]! @relation(name: "UserToArchive", onDelete: CASCADE) # When a user is deleted, delete it's archive
  favorites: [Favorite]! @relation(name: "UserToFavorite", onDelete: CASCADE) # When a user is deleted, delete it's favorites
  articles: [Article!]! @relation(name: "ArticleCreator", onDelete: SET_NULL) # When a user is deleted, set user to null on article
  authenticatedAt: DateTime
  activatedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

# A user has one playlist with multiple articles, which he can change the order of
type Playlist {
  user: User! @relation(name: "UserToPlaylist")
  article: Article! @relation(name: "ArticleToPlaylist")
  order: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

# A user can favorite multiple articles
type Favorite {
  user: User! @relation(name: "UserToFavorite")
  article: Article! @relation(name: "ArticleToFavorite")
  createdAt: DateTime!
  updatedAt: DateTime!
}

# A user can archive multiple articles
type Archive {
  user: User! @relation(name: "UserToArchive")
  article: Article! @relation(name: "ArticleToArchive")
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Audiofile {
  id: ID! @unique
  url: String! @unique
  article: Article! @relation(name: "ArticleAudiofiles", onDelete: SET_NULL) # When an audiofile is deleted, we don't delete the article
  length: Float! # The listentime of the audio file
  language: Language!
  encoding: Encoding!
  voice: String!
  synthesizer: Synthesizer!
  listens: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Article {
  id: ID! @unique
  title: String!
  description: String
  url: String! @unique
  imageUrl: String
  readingTime: Float
  language: Language!
  authorName: String
  authorUrl: String
  categoryName: String
  html: String # The raw article HTML we took as a base to generate the SSML
  ssml: String # The generated SSML using <speak> <p> etc...
  text: String # Plain text of the article, using `\n` for new lines
  sourceName: String
  user: User @relation(name: "ArticleCreator") # A reference to which user created this article, we generally don't return this to other users , TODO: what happens when we delete a user?
  audiofiles: [Audiofile]! @relation(name: "ArticleAudiofiles", onDelete: CASCADE) # When we delete an article, we delete all audiofiles
  playlists: [Playlist!]! @relation(name: "ArticleToPlaylist")
  archives: [Archive!]! @relation(name: "ArticleToArchive")
  favorites: [Favorite!]! @relation(name: "ArticleToFavorite")
  createdAt: DateTime!
  updatedAt: DateTime!
}
