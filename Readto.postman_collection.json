{
	"info": {
		"_postman_id": "bb3cdce1-ac5e-4e30-99fb-9430d1bca04d",
		"name": "Readto",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests an user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Me",
			"item": [
				{
					"name": "Get account details",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04c29ab7-e778-41de-901c-4fb5647c36e7",
								"exec": [
									"pm.test(\"Should NOT have a password field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.password).to.be.undefined;",
									"});",
									"",
									"pm.test(\"Should have an email field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.be.string;",
									"});",
									"",
									"pm.test(\"Should have an id field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.string;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me"
							]
						},
						"description": "Gets basic account details of the current user."
					},
					"response": []
				},
				{
					"name": "Update email",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"jordyvandenaardweg@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me/email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me",
								"email"
							]
						},
						"description": "Allow the user to change his e-mail address and password."
					},
					"response": []
				},
				{
					"name": "Update password",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"password\": \"demo\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me"
							]
						},
						"description": "Allows the user to delete his own account. All references in the database will be deleted, including: favorites, archives, and playlists."
					},
					"response": []
				},
				{
					"name": "Get all favorites",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04c29ab7-e778-41de-901c-4fb5647c36e7",
								"exec": [
									"pm.test(\"Should NOT have a password field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.password).to.be.undefined;",
									"});",
									"",
									"pm.test(\"Should have an email field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.be.string;",
									"});",
									"",
									"pm.test(\"Should have an id field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.string;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a favorite",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04c29ab7-e778-41de-901c-4fb5647c36e7",
								"exec": [
									"pm.test(\"Should NOT have a password field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.password).to.be.undefined;",
									"});",
									"",
									"pm.test(\"Should have an email field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.be.string;",
									"});",
									"",
									"pm.test(\"Should have an id field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.string;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"articleId\": \"cjshmabjl007h0731vl5fjol3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me",
								"favorites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all created articles",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "04c29ab7-e778-41de-901c-4fb5647c36e7",
								"exec": [
									"pm.test(\"Should NOT have a password field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.password).to.be.undefined;",
									"});",
									"",
									"pm.test(\"Should have an email field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.be.string;",
									"});",
									"",
									"pm.test(\"Should have an id field\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.string;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/me/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"me",
								"articles"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d2d45ef4-53f8-466b-b37c-2732b69d58e4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e1b5dbde-3619-48cd-ab25-c3745c4edc57",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Articles",
			"item": [
				{
					"name": "Get a article",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/cjshmabjl007h0731vl5fjol3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"cjshmabjl007h0731vl5fjol3"
							]
						},
						"description": "We generate the audio of an article on-demand. Because this is what costs the most. If a user just adds an article, but never listens to it, we don't have wasted costs to generate an audiofile of it.\n\nWhat this endpoint does: If it needs to generate an audiofile > crawls the article URL to extract all the content, generate a readable format of the article and use that to create a voice recording. All this data is saved in the database and returned to the user.\n\nSo this endpoint could take a little longer to load when it still needs to generate an audiofile."
					},
					"response": []
				},
				{
					"name": "Get a audiofile",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/audiofile/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"audiofile",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download audiofile",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/audiofile/1/download",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"audiofile",
								"1",
								"download"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a article",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"url\": \"https://medium.com/thrive-global/one-behavior-separates-the-successful-from-the-average-adc8e6edd3e3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles"
							]
						},
						"description": "Creates a basic article in the database. This article does not include an audiofile, yet. Audiofiles are generated on demand."
					},
					"response": [
						{
							"name": "Create a article",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"url\": \"https://medium.com/thrive-global/one-behavior-separates-the-successful-from-the-average-adc8e6edd3e3\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/v1/articles",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"v1",
										"articles"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n\t\"title\": \"One Behavior Separates The Successful From The Average\",\n\t\"description\": \"A certain farmer had become old and ready to pass his farm down to one of his two sons. When he brought his sons together to speak about it, he told them: The farm will go to the younger son.\",\n\t\"language\": \"en\",\n\t\"sourceName\": \"Medium\",\n\t\"url\": \"https://medium.com/thrive-global/one-behavior-separates-the-successful-from-the-average-adc8e6edd3e3\"\n}"
						}
					]
				},
				{
					"name": "Create audio for article",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/audiofile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"audiofile"
							]
						},
						"description": "Create another audiofile for this article using a different voice then the default one."
					},
					"response": []
				},
				{
					"name": "Add article to favorites",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/favorite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"favorite"
							]
						},
						"description": "Adds an article to the user's favorite list"
					},
					"response": []
				},
				{
					"name": "Add article to playlist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/playlist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"playlist"
							]
						},
						"description": "Adds an article to the user's favorite list. The newest article is put below the other ones (using the correct \"order\")"
					},
					"response": []
				},
				{
					"name": "Add article to archive",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"archive"
							]
						},
						"description": "Adds an article to the user's archive. When an article is added to the archive, it is removed from the user's playlist."
					},
					"response": []
				},
				{
					"name": "Delete article from favorites",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/favorite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"favorite"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete article from playlist",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/playlist",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"playlist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete article from archive",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete article (admin only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1"
							]
						},
						"description": "Completely deletes an article from the database, including all the referencies for the users (archives, playlists, favorites) and audiofiles. Normal users should not have access to this endpoint."
					},
					"response": []
				},
				{
					"name": "Delete audiofile (admin only)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"language\": \"en\",\n\t\"voice\": \"\",\n\t\"synthesizer\": \"GOOGLE\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/articles/1/audiofile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"articles",
								"1",
								"audiofile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "221a092c-9d9c-4633-a48b-c3e8ac64199f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "221a092c-9d9c-4633-a48b-c3e8ac64199f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"jordyvandenaardweg@gmail.de\",\n\t\"password\": \"demo\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users"
							]
						},
						"description": "Allows a new user to create an account."
					},
					"response": []
				},
				{
					"name": "Delete a user (admin only)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/users/f991b5c1-1382-4b2a-bab0-f540526b4c16",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								"f991b5c1-1382-4b2a-bab0-f540526b4c16"
							]
						},
						"description": "An endpoint to delete a user on request. The endpoint should only be available to a certain user ID."
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Authenticate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b3969486-82e1-4a52-bcc7-72974164f2db",
								"exec": [
									"var jsonData = pm.response.json();",
									"if (jsonData.token) {",
									"    pm.environment.set(\"token\", jsonData.token);    ",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"jordyvandenaardweg@gmail.com\",\n\t\"password\": \"demo\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"auth"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Playlists",
			"item": [
				{
					"name": "Change order in playlist",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"articleId\": \"1231231\",\n\t\"order\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/v1/playlists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"playlists"
							]
						},
						"description": "Change the order of the playlist by sending the article ID that changed in order. The endpoint will correctly order the other articles in the playlist. It returns the new ordered playlist."
					},
					"response": []
				},
				{
					"name": "Get user playlist",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/playlists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"playlists"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "81756a43-a09f-4aee-a7ce-78a0276fa7f6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ae40a147-cd5d-4bda-89dc-fc545137b4a6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Favorites",
			"item": [
				{
					"name": "Get user favorites",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/favorites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"favorites"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Archives",
			"item": [
				{
					"name": "Get user archive",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/archives",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"archives"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Get subscription",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/subscriptions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subscriptions"
							]
						},
						"description": "Gets the subscription details of the user"
					},
					"response": []
				},
				{
					"name": "Create subscription",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/v1/subscriptions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"subscriptions"
							]
						},
						"description": "Create a subscription for a user. In essense setting up a recurring subscription plan for the user."
					},
					"response": []
				},
				{
					"name": "Delete subscription",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": ""
						},
						"description": "Allows the user to delete a subscription, so cancelling any subscription at the end of the subscription period."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "64cdac61-8f22-483d-aee2-3673790cd7bd",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "527c09f2-b2fc-4f57-a6ec-dfd4f69f9fc1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}